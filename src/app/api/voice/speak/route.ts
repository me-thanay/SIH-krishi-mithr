import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { text, language = 'en', voice = 'default' } = body

    if (!text) {
      return NextResponse.json(
        { error: 'No text provided' },
        { status: 400 }
      )
    }

    // Generate speech using browser's built-in speech synthesis
    // In production, you could use Google Cloud Text-to-Speech or Azure Speech
    const speechConfig = {
      text: text,
      language: getLanguageCode(language),
      voice: getVoiceForLanguage(language),
      rate: 0.8,
      pitch: 1.0,
      volume: 1.0
    }

    return NextResponse.json({
      success: true,
      speechConfig,
      audioUrl: null, // Would be generated by TTS service
      timestamp: new Date().toISOString(),
      note: 'Use browser speechSynthesis API for audio playback'
    })

  } catch (error) {
    console.error('Text-to-speech error:', error)
    return NextResponse.json(
      { 
        success: false, 
        error: 'Failed to generate speech',
        details: error instanceof Error ? error.message : 'Unknown error'
      },
      { status: 500 }
    )
  }
}

function getLanguageCode(language: string): string {
  const languageCodes: { [key: string]: string } = {
    'en': 'en-US',
    'hi': 'hi-IN',
    'te': 'te-IN',
    'ta': 'ta-IN',
    'bn': 'bn-IN',
    'gu': 'gu-IN',
    'kn': 'kn-IN',
    'ml': 'ml-IN',
    'mr': 'mr-IN',
    'pa': 'pa-IN',
    'ur': 'ur-IN'
  }
  return languageCodes[language] || 'en-US'
}

function getVoiceForLanguage(language: string): string {
  const voices: { [key: string]: string } = {
    'en': 'Google US English',
    'hi': 'Google हिन्दी',
    'te': 'Google తెలుగు',
    'ta': 'Google தமிழ்',
    'bn': 'Google বাংলা',
    'gu': 'Google ગુજરાતી',
    'kn': 'Google ಕನ್ನಡ',
    'ml': 'Google മലയാളം',
    'mr': 'Google मराठी',
    'pa': 'Google ਪੰਜਾਬੀ',
    'ur': 'Google اردو'
  }
  return voices[language] || 'Google US English'
}
